-- local dap = require("dap")
-- dap.set_log_level('TRACE')
--
-- dap.defaults.fallback.external_terminal = {
--     command = '/home/joel/.local/bin/kitty';
--     args = {'-e'};
-- }
-- dap.defaults.fallback.force_external_terminal = true
--
-- -- adapters
-- dap.adapters.cppdbg = {
--     id = 'cppdbg',
--     type = 'executable',
--     command = '/home/joel/.vscode/extensions/ms-vscode.cpptools-1.14.5-linux-x64/debugAdapters/bin/OpenDebugAD7',
-- }
--
-- -- configs
-- dap.configurations.cpp = {
--     {
--         name = "Launch file",
--         type = "cppdbg",
--         request = "launch",
--         program = function()
--             return vim.fn.input('Path to executable: ', BPATHX, 'file')
--         end,
--         cwd = '${workspaceFolder}',
--         stopAtEntry = true,
--     },
--     {
--         setupCommands = {
--             {
--                 text = '-enable-pretty-printing',
--                 description =  'enable pretty printing',
--                 ignoreFailures = false
--             },
--         },
--     },
-- }
-- dap.configurations.c = dap.configurations.cpp
--
-- -- mappings
-- vim.cmd [[ autocmd FileType dap-float nnoremap <buffer><silent> q <cmd>close!<CR> ]]
--
-- MAP("n", "<F5>", function() dap.continue() end)
-- MAP("n", "<F6>", function() dap.step_over() end)
-- MAP("n", "<F7>", function() dap.step_into() end)
-- MAP("n", "<F8>", function() dap.step_out() end)
-- MAP("n", "<Leader>b", function() dap.toggle_breakpoint() end)
-- MAP("n", "<Leader>B", function() dap.set_breakpoint(nil, nil, vim.fn.input('Log point message: ')) end)
-- -- map("n", "<Leader>dr", function() dap.repl.open() end)
-- -- map("n", "<Leader>dl", function() dap.run_last() end)
-- MAP({"n", "v"}, '<Leader>dh', function() require('dap.ui.widgets').hover() end)
-- MAP({"n", "v"}, '<Leader>dp', function() require('dap.ui.widgets').preview() end)
--
-- MAP('n', '<Leader>df', function()
--     local widgets = require('dap.ui.widgets')
--     widgets.centered_float(widgets.frames)
-- end)
--
-- MAP('n', '<Leader>ds', function()
--     local widgets = require('dap.ui.widgets')
--     widgets.centered_float(widgets.scopes)
-- end)
--
-- --------------------------------------------------- DAPUI
-- local dapui = require("dapui")
-- require("nvim-dap-virtual-text").setup{}
--
-- -- auto open dapui when debug start
-- dap.listeners.after.event_initialized["dapui_config"] = function () dapui.open() end
-- dap.listeners.before.event_terminated["dapui_config"] = function () dapui.close() end
-- dap.listeners.before.event_exited["dapui_config"] = function () dapui.close() end
--
-- MAP("n", "<leader>od", function() dapui.toggle() end)
--
-- dapui.setup({
--     controls = {
--         element = "repl",
--         enabled = false,
--     },
-- })
